<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <TargetFramework>net9.0-windows10.0.22621.0</TargetFramework>
    <TargetPlatformMinVersion>10.0.17763.0</TargetPlatformMinVersion>
    <RootNamespace>gui_example</RootNamespace>
    <ApplicationManifest>app.manifest</ApplicationManifest>
    <Platforms>x64;ARM64</Platforms>
    <RuntimeIdentifiers>win-x64;win-arm64</RuntimeIdentifiers>
    <PublishProfile>win-$(Platform).pubxml</PublishProfile>
    <UseWinUI>true</UseWinUI>
    <EnableMsixTooling>true</EnableMsixTooling>
    <Nullable>enable</Nullable>
	  <WindowsPackageType>None</WindowsPackageType>
  </PropertyGroup>

  <ItemGroup>
    <Content Include="Assets\SplashScreen.scale-200.png" />
    <Content Include="Assets\LockScreenLogo.scale-200.png" />
    <Content Include="Assets\Square150x150Logo.scale-200.png" />
    <Content Include="Assets\Square44x44Logo.scale-200.png" />
    <Content Include="Assets\Square44x44Logo.targetsize-24_altform-unplated.png" />
    <Content Include="Assets\StoreLogo.png" />
    <Content Include="Assets\Wide310x150Logo.scale-200.png" />
  </ItemGroup>

	<ItemGroup>
		<ARM64Binaries Include="win-arm64\**" />
		<X64Binaries Include="win-x64\**" />
	</ItemGroup>

	<Target Name="AfterBuildARM" AfterTargets="Build" Condition=" '$(Platform)' == 'ARM64' ">
		<Message Text="Copying ARM64 Binaries..." Importance="High" />
		<Copy SourceFiles="@(ARM64Binaries)" DestinationFolder="$(OutDir)" />
		<Message Text="Cleaning up Unsupported Architecture Dependencies..." Importance="High" />
		<RemoveDir Directories="$(OutDir)\runtimes\win-x64" />
		<RemoveDir Directories="$(OutDir)\runtimes\win-x86" />
		<RemoveDir Directories="$(OutDir)\runtimes\win10-x64" />
		<RemoveDir Directories="$(OutDir)\runtimes\win10-x86" />
	</Target>

	<Target Name="AfterPublishARM" AfterTargets="Publish" Condition=" '$(Platform)' == 'ARM64' ">
		<Message Text="Copying ARM64 Binaries..." Importance="High" />
		<Copy SourceFiles="@(ARM64Binaries)" DestinationFolder="$(PublishDir)" />
		<Message Text="Cleaning up Unsupported Architecture Dependencies..." Importance="High" />
		<RemoveDir Directories="$(PublishDir)\runtimes\win-x64" />
		<RemoveDir Directories="$(PublishDir)\runtimes\win-x86" />
		<RemoveDir Directories="$(PublishDir)\runtimes\win10-x64" />
		<RemoveDir Directories="$(PublishDir)\runtimes\win10-x86" />
		<RemoveDir Directories="$(LinuxPublishRuntimeDirs)*" />
	</Target>

	<Target Name="AfterBuildX64" AfterTargets="Build" Condition=" '$(Platform)' == 'x64' ">
		<Message Text="Copying X64 Binaries..." Importance="High" />
		<Copy SourceFiles="@(X64Binaries)" DestinationFolder="$(OutDir)" />
		<Message Text="Cleaning up Unsupported Architecture Dependencies..." Importance="High" />
		<RemoveDir Directories="$(OutDir)\runtimes\win-arm64" />
		<RemoveDir Directories="$(OutDir)\runtimes\win-x86" />
		<RemoveDir Directories="$(OutDir)\runtimes\win10-arm64" />
		<RemoveDir Directories="$(OutDir)\runtimes\win10-x86" />
		<RemoveDir Directories="$(OutDir)\runtimes\linux**" />
	</Target>
	<Target Name="AfterPublishX64" AfterTargets="Publish" Condition=" '$(Platform)' == 'x64' ">
		<Message Text="Copying X64 Binaries..." Importance="High" />
		<Copy SourceFiles="@(X64Binaries)" DestinationFolder="$(PublishDir)" />
		<Message Text="Cleaning up Unsupported Architecture Dependencies..." Importance="High" />
		<RemoveDir Directories="$(PublishDir)\runtimes\win-arm64" />
		<RemoveDir Directories="$(PublishDir)\runtimes\win-x86" />
		<RemoveDir Directories="$(PublishDir)\runtimes\win10-arm64" />
		<RemoveDir Directories="$(PublishDir)\runtimes\win10-x86" />
		<RemoveDir Directories="$(PublishDir)\runtimes\linux**" />
	</Target>

  <ItemGroup>
    <Manifest Include="$(ApplicationManifest)" />
  </ItemGroup>

  <!--
    Defining the "Msix" ProjectCapability here allows the Single-project MSIX Packaging
    Tools extension to be activated for this project even if the Windows App SDK Nuget
    package has not yet been restored.
  -->
  <ItemGroup Condition="'$(DisableMsixProjectCapabilityAddedByProject)'!='true' and '$(EnableMsixTooling)'=='true'">
    <ProjectCapability Include="Msix" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="Microsoft.Windows.SDK.BuildTools" Version="10.0.26100.1742" />
    <PackageReference Include="Microsoft.WindowsAppSDK" Version="1.6.250205002" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\fx-api-csharp\fx-api-csharp.csproj" />
  </ItemGroup>
  <ItemGroup>
    <None Update="win-arm64\avcodec-61.dll">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="win-arm64\avdevice-61.dll">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="win-arm64\avfilter-10.dll">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="win-arm64\avformat-61.dll">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="win-arm64\avutil-59.dll">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="win-arm64\OpenCvSharpExtern.dll">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="win-arm64\swresample-5.dll">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="win-arm64\swscale-8.dll">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="win-x64\avcodec-61.dll">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="win-x64\avdevice-61.dll">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="win-x64\avfilter-10.dll">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="win-x64\avformat-61.dll">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="win-x64\avutil-59.dll">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="win-x64\OpenCvSharpExtern.dll">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="win-x64\postproc-58.dll">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="win-x64\swresample-5.dll">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="win-x64\swscale-8.dll">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <!--
    Defining the "HasPackageAndPublishMenuAddedByProject" property here allows the Solution
    Explorer "Package and Publish" context menu entry to be enabled for this project even if
    the Windows App SDK Nuget package has not yet been restored.
  -->
  <PropertyGroup Condition="'$(DisableHasPackageAndPublishMenuAddedByProject)'!='true' and '$(EnableMsixTooling)'=='true'">
    <HasPackageAndPublishMenu>true</HasPackageAndPublishMenu>
  </PropertyGroup>

  <!-- Publish Properties -->
  <PropertyGroup>
    <PublishReadyToRun Condition="'$(Configuration)' == 'Debug'">False</PublishReadyToRun>
    <PublishReadyToRun Condition="'$(Configuration)' != 'Debug'">True</PublishReadyToRun>
    <PublishTrimmed Condition="'$(Configuration)' == 'Debug'">False</PublishTrimmed>
    <PublishTrimmed Condition="'$(Configuration)' != 'Debug'">True</PublishTrimmed>
  </PropertyGroup>
</Project>